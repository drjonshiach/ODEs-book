Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jon/Library/Python/3.11/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.3/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['text.usetex'] = True  # allows use of LaTeX in labels


def solveIVP_SSC(f, tspan, y0, h, solver, tol=1e-4):

    # Define t and y arrays
    t = np.zeros(10000)
    y = np.zeros((10000,len(y0)))
    t[0] = tspan[0]
    y[0,:] = y0

    # Solver loop
    n = 0
    while t[n] < tspan[-1]:
        yp1, yp, p = solver(f, t[n], y[n,:], h)
        delta = np.max(np.abs(yp1 - yp))

        # Determine whether step was successful or not
        if delta < tol:
            y[n+1,:] = yp1
            t[n+1] = t[n] + h
            n += 1
        
        # Calculate new value of h (making sure not to exceed tmax)
        h *= max(0.5, min(2, 0.9 * (tol / delta) ** (1 / (p + 1))))
        h = min(h, tspan[-1] - t[n])

    return t[:n+1], y[:n+1,:]


def rkf45(f, t, y, h):

    k1 = f(t, y)
    k2 = f(t + 1/4 * h, y + 1/4 * h * k1)
    k3 = f(t + 3/8 * h, y + h * (3/32 * k1 + 9/32 * k2))
    k4 = f(t + 12/13 * h, y + h * (1932/2197 * k1 - 7200/2197 * k2 + 7296/2197 * k3))
    k5 = f(t + h, y + h * (439/216 * k1 - 8 * k2 + 3680/513 * k3 - 845/4104 * k4))
    k6 = f(t + 1/2 * h, y + h * (-8/27 * k1 + 2 * k2 - 3544/2565 * k3 + 1859/4104 * k4 - 11/40 * k5))
    y5 = y + h * (16/135 * k1 + 6656/12825 * k3 + 28561/56430 * k4 - 9/50 * k5 + 2/55 * k6)
    y4 = y + h * (25/216 * k1 + 1408/2565 * k3 + 2197/4104 * k4 - 1/5 * k5);

    return y5, y4, 4


def rkbs23(f, t, y, h):

    k1 = f(t, y)
    k2 = f(t + 1/2 * h, y + 1/2 * h * k1)
    k3 = f(t + 3/4 * h, y + 3/4 * h * k2)
    k4 = f(t + h, y + h * (2/9 * k1 + 1/3 * k2 + 4/9 * k3))
    y3 = y + h * (2/9 * k1 + 1/3 * k2 + 4/9 * k3)
    y2 = y + h * (7/24 * k1 + 1/4 * k2 + 1/3 * k3 + 1/8 * k4)

    return y3, y2, 2

    
# Define the ODE function and exact solution
def f(t, y):
    return -21 * y + np.exp(-t)


def exact(t):
    return 1/20 * np.exp(-21 * t) * (np.exp(20 * t) - 1)


# Define IVP
tspan = [0, 1]  # boundaries of the t domain
y0 = [0]        # solution at the lower boundary
h = 0.1         # initial step length
tol = 1e-4      # accuracy tolerance

# Calculate the solution to the IVP
t_rkbs23, y_rkbs23 = solveIVP_SSC(f, tspan, y0, h, rkbs23, tol)
t_rkf45, y_rkf45 = solveIVP_SSC(f, tspan, y0, h, rkf45, tol)

# Print table of solution values
print("\n| $n$ |   $t_n$   |   $y_n$   |    $h_n$  |")
print("|:---:|:---------:|:---------:|:---------:|")
print(f"|  0  | {t[0]:9.6f} | {y[0,0]:9.6f} |     -     |")
for n in range(1,len(t)):
    print(f"| {n:2d}  | {t_rkf45[n]:9.6f} | {y_rkf45[n,0]:9.6f} | {t_rkf45[n] - t_rkf45[n-1]:9.6f} |")

# Plot solutions
t_exact = np.linspace(tspan[0], tspan[1], 200)
y_exact = exact(t_exact)
fig, ax = plt.subplots()
plt.plot(t_exact, y_exact, "k", label="Exact")
plt.plot(t, y, "bo-", label="RKF45")
plt.xlabel("$t$", fontsize=12)
plt.ylabel("$y$", fontsize=12)
plt.legend()

from myst_nb import glue
glue('rkf45-example-plot', fig, display=False)
------------------

----- stdout -----

| $n$ |   $t_n$   |   $y_n$   |    $h_n$  |
|:---:|:---------:|:---------:|:---------:|
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 81[0m
[1;32m     79[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m| $n$ |   $t_n$   |   $y_n$   |    $h_n$  |[39m[38;5;124m"[39m)
[1;32m     80[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m|:---:|:---------:|:---------:|:---------:|[39m[38;5;124m"[39m)
[0;32m---> 81[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124m|  0  | [39m[38;5;132;01m{[39;00m[43mt[49m[[38;5;241m0[39m][38;5;132;01m:[39;00m[38;5;124m9.6f[39m[38;5;132;01m}[39;00m[38;5;124m | [39m[38;5;132;01m{[39;00my[[38;5;241m0[39m,[38;5;241m0[39m][38;5;132;01m:[39;00m[38;5;124m9.6f[39m[38;5;132;01m}[39;00m[38;5;124m |     -     |[39m[38;5;124m"[39m)
[1;32m     82[0m [38;5;28;01mfor[39;00m n [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m1[39m,[38;5;28mlen[39m(t)):
[1;32m     83[0m     [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124m| [39m[38;5;132;01m{[39;00mn[38;5;132;01m:[39;00m[38;5;124m2d[39m[38;5;132;01m}[39;00m[38;5;124m  | [39m[38;5;132;01m{[39;00mt_rkf45[n][38;5;132;01m:[39;00m[38;5;124m9.6f[39m[38;5;132;01m}[39;00m[38;5;124m | [39m[38;5;132;01m{[39;00my_rkf45[n,[38;5;241m0[39m][38;5;132;01m:[39;00m[38;5;124m9.6f[39m[38;5;132;01m}[39;00m[38;5;124m | [39m[38;5;132;01m{[39;00mt_rkf45[n][38;5;250m [39m[38;5;241m-[39m[38;5;250m [39mt_rkf45[n[38;5;241m-[39m[38;5;241m1[39m][38;5;132;01m:[39;00m[38;5;124m9.6f[39m[38;5;132;01m}[39;00m[38;5;124m |[39m[38;5;124m"[39m)

[0;31mNameError[0m: name 't' is not defined

