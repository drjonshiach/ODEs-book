Traceback (most recent call last):
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.9_3.9.3568.0_x64__qbz5n2kfra8p0\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\jonsh\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

def euler(f, tspan, y0, h):
    nsteps = int((tspan[1] - tspan[0]) / h)
    neq = len(y0)
    t = np.arange(nsteps + 1) * h
    y = np.zeros((nsteps + 1, neq))
    y[0,:] = y0
    for n in range(nsteps):
        y[n+1,:] = y[n,:] + h * f(t[n], y[n,:])
        
    return t, y 


def f(t, y):
    return np.array([y[1], y[0] + y[1]])


# Define BVP parameters
tspan = [0, 1]  # boundaries of the t domain
bvals = [0, 2]  # boundary values
h = 0.2         # step length
s = [1, 2, 1.5]

# Calculate the solution to the IVP for the different guess values
ysols = []
for i in range(3):
    t, y = euler(f, tspan, [bvals[0], s[i]], h)
    ysols.append(y)
    
# Print table
for y in ysols:
    print(f"\ns = {y[0,1]:0.2f}\n")
    print("|  $t$  |  $y_1$  |  $y_2$  |")
    print("|:-----:|:-------:|:-------:|")
    for n in range(len(t)):
        print(f"| {t[n]:5.2f} | {y[n,0]:7.4f} | {y[n,1]:7.4f} |")
        
    
# Plot solution
fig, ax = plt.subplots(figsize=(8, 6))
plt.plot(t, ysols[0][:,0], "bo-", label="$s = 1.0$")
plt.plot(t, ysols[1][:,0], "ro-", label="$s = 2.0$")
plt.plot(t, ysols[2][:,0], "go-", label="$s = 1.5$")
plt.plot(tspan, bvals, "ko")
plt.annotate(f"$y(1)={bvals[1]}$", xy=(tspan[1], bvals[1]), xytext=(tspan[1]+0.1, bvals[1]), fontsize=14,
             arrowprops=dict(arrowstyle='->', shrinkB=5))
plt.annotate(f"$y(1)={ysols[0][-1,0]}$", xy=(tspan[1], ysols[0][-1,0]), xytext=(tspan[1]+0.1, ysols[0][-1,0]), fontsize=14, color="b",
             arrowprops=dict(arrowstyle='->', shrinkB=5, ec="b"))
plt.annotate(f"$y(1)={ysols[1][-1,0]}$", xy=(tspan[1], ysols[1][-1,0]), xytext=(tspan[1]+0.1, ysols[1][-1,0]), fontsize=14, color="r",
             arrowprops=dict(arrowstyle='->', shrinkB=5, ec="r"))
plt.annotate(f"$y(1)={ysols[2][-1,0]:0.4f}$", xy=(tspan[1], ysols[2][-1,0]), xytext=(tspan[1]+0.1, ysols[2][-1,0]), fontsize=14, color="g",
             arrowprops=dict(arrowstyle='->', shrinkB=5, ec="g"))
plt.xlabel("$t$", fontsize=14)
plt.ylabel("$y$", fontsize=14)
plt.legend(fontsize=12)
plt.show()

from myst_nb import glue
glue("shooting_example_plot_1", fig, display=False)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn [1], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m      4[0m [38;5;28;01mdef[39;00m [38;5;21meuler[39m(f, tspan, y0, h):

[1;31mModuleNotFoundError[0m: No module named 'numpy'
ModuleNotFoundError: No module named 'numpy'

